{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chris\\\\Documents\\\\BudgetApp\\\\budget-app\\\\src\\\\context\\\\GlobalState.js\";\nimport React, { createContext, useReducer, useEffect } from 'react';\nimport AppReducer from './AppReducer';\nconst initialState = {\n  incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\n  expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || []\n};\nexport const GlobalContext = createContext(initialState);\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(\"incomeTransactions\", JSON.stringify(state.incomeTransactions));\n    localStorage.setItem(\"expenseTransactions\", JSON.stringify(state.expenseTransactions));\n  });\n\n  const addIncome = incomeTransaction => {\n    dispatch({\n      type: 'ADD_INCOME',\n      payload: incomeTransaction\n    });\n  };\n\n  const addExpense = expenseTransaction => {\n    dispatch({\n      type: 'ADD_EXPENSE',\n      payload: expenseTransaction\n    });\n  };\n\n  const deleteTransaction = id => {\n    dispatch({\n      type: 'DELETE_TRANSACTION',\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(GlobalContext.Provider, {\n    value: {\n      incomeTransactions: state.incomeTransactions,\n      expenseTransactions: state.expenseTransactions,\n      addIncome,\n      addExpense,\n      deleteTransaction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, children);\n}; // DUMMY DATA to test\n// { id: 1, incomeText: \"Car Sold\", incomeAmount: 15000},\n// { id: 2, incomeText: \"Salary\", incomeAmount: 5000},\n// { id: 3, incomeText: \"Bonus\", incomeAmount: 13000},\n// { id: 4, expenseText: \"Rent\", expenseAmount: 1000},\n// { id: 5, expenseText: \"Bank\", expenseAmount: 2000},\n// { id: 6, expenseText: \"Clothes\", expenseAmount: 500},","map":{"version":3,"sources":["C:/Users/chris/Documents/BudgetApp/budget-app/src/context/GlobalState.js"],"names":["React","createContext","useReducer","useEffect","AppReducer","initialState","incomeTransactions","JSON","parse","localStorage","getItem","expenseTransactions","GlobalContext","GlobalContextProvider","children","state","dispatch","setItem","stringify","addIncome","incomeTransaction","type","payload","addExpense","expenseTransaction","deleteTransaction","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,QAA4D,OAA5D;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,kBAAkB,EAAEC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,oBAArB,CAAX,KAA0D,EAD3D;AAEnBC,EAAAA,mBAAmB,EAAEJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,qBAArB,CAAX,KAA2D;AAF7D,CAArB;AAKA,OAAO,MAAME,aAAa,GAAGX,aAAa,CAACI,YAAD,CAAnC;AAEP,OAAO,MAAMQ,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAErD,QAAK,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,UAAD,EAAaC,YAAb,CAAnC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,YAAY,CAACQ,OAAb,CAAqB,oBAArB,EAA2CV,IAAI,CAACW,SAAL,CAAeH,KAAK,CAACT,kBAArB,CAA3C;AACAG,IAAAA,YAAY,CAACQ,OAAb,CAAqB,qBAArB,EAA4CV,IAAI,CAACW,SAAL,CAAeH,KAAK,CAACJ,mBAArB,CAA5C;AACD,GAHQ,CAAT;;AAKA,QAAMQ,SAAS,GAAIC,iBAAD,IAAuB;AACvCJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,YADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,UAAU,GAAIC,kBAAD,IAAwB;AACzCR,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEE;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMC,iBAAiB,GAAIC,EAAD,IAAQ;AAChCV,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,oBADC;AAEPC,MAAAA,OAAO,EAAEI;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,sBACE,oBAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAC7BpB,MAAAA,kBAAkB,EAAES,KAAK,CAACT,kBADG;AAE7BK,MAAAA,mBAAmB,EAAEI,KAAK,CAACJ,mBAFE;AAG7BQ,MAAAA,SAH6B;AAI7BI,MAAAA,UAJ6B;AAK7BE,MAAAA;AAL6B,KAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,QAPH,CADF;AAWD,CAzCM,C,CA4CH;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { createContext, useReducer, useEffect } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\nconst initialState = {\r\n  incomeTransactions: JSON.parse(localStorage.getItem('incomeTransactions')) || [],\r\n  expenseTransactions: JSON.parse(localStorage.getItem('expenseTransactions')) || [],\r\n};\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalContextProvider = ({ children }) => {\r\n\r\n  const[state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"incomeTransactions\", JSON.stringify(state.incomeTransactions));\r\n    localStorage.setItem(\"expenseTransactions\", JSON.stringify(state.expenseTransactions));\r\n  })\r\n\r\n  const addIncome = (incomeTransaction) => {\r\n    dispatch({\r\n      type: 'ADD_INCOME',\r\n      payload: incomeTransaction\r\n    });\r\n  }\r\n\r\n  const addExpense = (expenseTransaction) => {\r\n    dispatch({\r\n      type: 'ADD_EXPENSE',\r\n      payload: expenseTransaction\r\n    });\r\n  }\r\n\r\n  const deleteTransaction = (id) => {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider value={{\r\n      incomeTransactions: state.incomeTransactions,\r\n      expenseTransactions: state.expenseTransactions,\r\n      addIncome,\r\n      addExpense,\r\n      deleteTransaction,\r\n    }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n\r\n\r\n    // DUMMY DATA to test\r\n    // { id: 1, incomeText: \"Car Sold\", incomeAmount: 15000},\r\n    // { id: 2, incomeText: \"Salary\", incomeAmount: 5000},\r\n    // { id: 3, incomeText: \"Bonus\", incomeAmount: 13000},\r\n\r\n    // { id: 4, expenseText: \"Rent\", expenseAmount: 1000},\r\n    // { id: 5, expenseText: \"Bank\", expenseAmount: 2000},\r\n    // { id: 6, expenseText: \"Clothes\", expenseAmount: 500},"]},"metadata":{},"sourceType":"module"}